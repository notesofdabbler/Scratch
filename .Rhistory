install.packages("visnetwork")
install.packages("visNetwork")
library(visNetwork)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
View(nodes)
visNetwork(nodes, edges = NULL)
visNetwork(nodes, edges = NULL)
g = visNetwork(nodes, edges = NULL)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
g = visNetwork(nodes, edges = NULL)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
g = visNetwork(nodes, edges = NULL)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(0, 0, 0, 0)
g
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g %>% visNodes(physics = physics) %>%
visEdges(smooth = smooth) %>% visPhysics(stabilization = FALSE)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
g = visNetwork(nodes, edges)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
g = visNetwork(nodes, edges)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g$x$nodes$x = g$x$nodes$x * 2
g$x$nodes$y = g$x$nodes$y * 2
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges = NULL)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges = NULL)
g$x$nodes$x = c(-1, -0.3, 0.3, 1)
g$x$nodes$y = c(-1, -0.3, 0.3, 1)
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges = NULL)
xscale = 1
yscale = 1
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(-1, -0.3, 0.3, 1) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(-1, -0.3, 0.3, 1) * xscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
g = visNetwork(nodes, edges)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(-1, -0.3, 0.3, 1) * xscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(-1, 0.3, -0.3, 1) * xscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(-1, 1, -1, 1) * xscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges = NULL)
xscale = 1
yscale = 1
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(0, 0, 0, 0) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g = visNetwork(nodes, edges = NULL)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(0, 0, 0, 0) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
library(visNetwork)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
g = visNetwork(nodes, edges = NULL)
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(0, 0, 0, 0) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
nodes$x = c(100, 200, 300, 400)
nodes$y = c(100, 100, 100, 100)
g = visNetwork(nodes, edges = NULL)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
# directly specify x and y columns in nodes dataframe (the magnitude looks like pixel
# coordinates)
nodes$x = c(100, 200, 300, 400)
nodes$y = c(100, 100, 100, 100)
g = visNetwork(nodes, edges = NULL)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
# directly specify x and y columns in nodes dataframe (the magnitude looks like pixel
# coordinates)
nodes$x = c(100, 200, 300, 400)
nodes$y = c(100, 100, 100, 100)
g = visNetwork(nodes, edges)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
# directly specify x and y columns in nodes dataframe (the magnitude looks like pixel
# coordinates)
nodes$x = c(100, 200, 300, 400)
nodes$y = c(100, 300, 0, 500)
g = visNetwork(nodes, edges)
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
g = visNetwork(nodes, edges = NULL)
# coordinates - negative is top left, positive is bottom right on screen
# code below based on
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
# which works with g$x$nodes and x,y coordinates are in the
# box (-xscale, -yscale) to (xscale, yscale) and sets layout as tree_layout
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(0, 1, -1, 2) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
nodes = data.frame(id = c(1, 2, 3, 4))
nodes$label = paste0("node_", nodes$id)
edges = data.frame(from = c(1, 2, 3), to = c(2, 3, 4))
edges$arrows = "to"
g = visNetwork(nodes, edges)
# coordinates - negative is top left, positive is bottom right on screen
# code below based on
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
# which works with g$x$nodes and x,y coordinates are in the
# box (-xscale, -yscale) to (xscale, yscale) and sets layout as tree_layout
xscale = 2
yscale = 2
g$x$nodes$x = c(-1, -0.3, 0.3, 1) * xscale
g$x$nodes$y = c(0, 1, -1, 2) * yscale
g$x$igraphlayout = "tree_layout"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
library(igraph)
tree <- make_tree(20, 3)
plot(tree, layout=layout_as_tree)
?make_tree
?layout_as_tree
library(igraph)
tree <- make_tree(20, 3)
plot(tree, layout=layout_as_tree)
plot(tree, layout=layout_as_tree(flip.y = TRUE))
library(igraph)
tree <- make_tree(20, 3)
plot(tree, layout=layout_as_tree)
plot(tree, layout=layout_as_tree, flip.y = TRUE)
library(igraph)
tree <- make_tree(20, 3)
plot(tree, layout=layout_as_tree)
plot(tree, layout=layout_as_tree(tree, flip.y = TRUE))
plot(tree, layout=layout_as_tree(tree, flip.y = FALSE))
get.edgelist(tree)
edges = as.data.frame(get.edgelist(tree))
edges
edges = as.data.frame(get.edgelist(tree))
names(edges) = c("from", "to")
nodes = data.frame(id = as.numeric(names(V(tree))))
nodes$label = id
edges = as.data.frame(get.edgelist(tree))
names(edges) = c("from", "to")
nodes = data.frame(id = as.numeric(names(V(tree))))
nodes$label = nodes$id
coord = layout(tree, layout_as_tree)
tree
layout_as_tree(tree)
coord = layout_as_tree(tree)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
coord = layout_as_tree(tree)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
nodes
edges = as.data.frame(get.edgelist(tree))
names(edges) = c("from", "to")
nodes = data.frame(id = as.numeric(names(V(tree))))
nodes$label = nodes$id
coord = layout_as_tree(tree)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
nodes
tree
V(tree)
edges
edges = as.data.frame(get.edgelist(tree))
names(edges) = c("from", "to")
nodes = data.frame(id = as.numeric(names(V(tree))))
nodes$label = nodes$id
nodes
names(V(tree))
edges = as.data.frame(get.edgelist(tree))
names(edges) = c("from", "to")
nodes = data.frame(id = as.numeric(V(tree)))
nodes$label = nodes$id
nodes
coord = layout_as_tree(tree)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = physics) %>%
visEdges(smooth = smooth) %>% visPhysics(stabilization = FALSE)
coord = layout_as_tree(tree)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g$x$nodes$x = ycoord_scaled
g$x$nodes$y = xcoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
coord = layout_as_tree(tree, flip.y = FALSE)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
g$x$nodes$x = ycoord_scaled
g$x$nodes$y = xcoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
library(igraph)
edgesM = matrix(c(1,2,1,3,2,3,2,4,3,5,4,6,5,6), ncol = 2, byrow = TRUE)
g = graph_from_edgelist(edgesM)
plot(g, layout_as_tree)
g
V(g)
E(g)
plot(g)
plot(g, layout_as_tree)
plot(g, layout = layout_as_tree)
plot(g, layout=layout_as_tree(tree, flip.y = FALSE))
plot(g, layout=layout_as_tree(g, flip.y = FALSE))
# get nodes and edges dataframe of graph g
edges = as.data.frame(get.edgelist(g))
names(edges) = c("from", "to")
edges$arrows = "to"
nodes = data.frame(id = as.numeric(V(g)))
nodes$label = nodes$id
# adapted from
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
coord = layout_as_tree(g, flip.y = FALSE)
g = visNetwork(nodes, edges)
xcoord = coord[,1]
ycoord = coord[,2]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
# adapted from
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
coord = layout_as_tree(g, flip.y = FALSE)
g = visNetwork(nodes, edges)
# flip the x and y coordinates of igraph output to make the graph horizontal
xcoord = coord[,2]
ycoord = coord[,1]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
# adapted from
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
coord = layout_as_tree(g, flip.y = FALSE)
g = visNetwork(nodes, edges)
# use igraph coordinates for x and manual coordinates for y
xcoord = coord[,2]
ycoord = c(1, 2, 0, 3, -1, 4)
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
library(igraph)
edgesM = matrix(c(1,2,1,3,2,3,2,4,3,5,4,6,5,6), ncol = 2, byrow = TRUE)
g = graph_from_edgelist(edgesM)
plot(g, layout = layout_as_tree)
plot(g, layout=layout_as_tree(g, flip.y = FALSE))
# get nodes and edges dataframe of graph g
edges = as.data.frame(get.edgelist(g))
names(edges) = c("from", "to")
edges$arrows = "to"
nodes = data.frame(id = as.numeric(V(g)))
nodes$label = nodes$id
# adapted from
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
coord = layout_as_tree(g, flip.y = FALSE)
g = visNetwork(nodes, edges)
# flip the x and y coordinates of igraph output to make the graph horizontal
xcoord = coord[,2]
ycoord = coord[,1]
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
# adapted from
# https://github.com/datastorm-open/visNetwork/blob/master/R/visIgraphLayout.R
coord = layout_as_tree(g, flip.y = FALSE)
g = visNetwork(nodes, edges)
# use igraph coordinates for x and manual coordinates for y
xcoord = coord[,2]
ycoord = c(1, 2, 0, 3, -1, 4)
to <- c(-1, 1)
from <- range(xcoord, na.rm = TRUE, finite = TRUE)
xcoord_scaled <- (xcoord - from[1])/diff(from) * diff(to) + to[1]
to <- c(-1, 1)
from <- range(ycoord, na.rm = TRUE, finite = TRUE)
ycoord_scaled <- (ycoord - from[1])/diff(from) * diff(to) + to[1]
g$x$nodes$x = xcoord_scaled
g$x$nodes$y = ycoord_scaled
g$x$igraphlayout <- "layout_as_tree"
g %>% visNodes(physics = FALSE) %>%
visEdges(smooth = FALSE) %>% visPhysics(stabilization = FALSE)
sessionInfo()
